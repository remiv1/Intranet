"""
This type stub file was generated by pyright.
"""

import typing
from borb.pdf.color.color import Color
from borb.pdf.layout_element.layout_element import LayoutElement

"""
A class representing a vertical list layout where each item contains an image paired with optional descriptive text.

The `VerticalPictureList` class is designed to arrange items in a vertically stacked format, ideal for creating
visually organized lists that combine images and text in a structured, sequential display. It is commonly used in
documents, presentations, and other visual media where a clean, vertical alignment is desired.

This layout provides a visually consistent format for showcasing collections of items such as portfolios, catalogs,
team profiles, or any content that benefits from a vertical arrangement of image-text combinations.
"""
class VerticalPictureList:
    """
    A class representing a vertical list layout where each item contains an image paired with optional descriptive text.

    The `VerticalPictureList` class is designed to arrange items in a vertically stacked format, ideal for creating
    visually organized lists that combine images and text in a structured, sequential display. It is commonly used in
    documents, presentations, and other visual media where a clean, vertical alignment is desired.

    This layout provides a visually consistent format for showcasing collections of items such as portfolios, catalogs,
    team profiles, or any content that benefits from a vertical arrangement of image-text combinations.
    """
    @staticmethod
    def build(level_1_items: typing.List[str], level_2_items: typing.List[typing.List[str]], pictures: typing.List[str], background_color: Color = ..., level_1_font_color: Color = ..., level_1_font_size: int = ..., level_2_font_color: Color = ..., level_2_font_size: int = ..., picture_size: typing.Tuple[int, int] = ...) -> LayoutElement:
        """
        Construct a vertical list layout element containing paired items with hierarchical text levels and images.

        This method builds a visual element that organizes `level_1_items` in a primary list format, where each main item
        is accompanied by a list of sub-items (`level_2_items`) and an associated image. It supports customization of
        text and background colors, font sizes, and image sizing for tailored styling.

        :param level_1_items:       Primary text items to be displayed at the top level in the vertical list.
        :param level_2_items:       A list of lists, where each sublist contains secondary text items related to each corresponding `level_1_item`. Each sublist aligns with the hierarchy of the primary items.
        :param pictures:            Paths to images that will accompany each primary item. The length should match `level_1_items` for consistent pairing.
        :param background_color:    Background color of the layout. Defaults to `X11Color.PRUSSIAN_BLUE`.
        :param level_1_font_color:  Font color for `level_1_items`. Defaults to `X11Color.WHITE`.
        :param level_1_font_size:   Font size for `level_1_items`. Defaults to 16.
        :param level_2_font_color:  Font color for `level_2_items`. Defaults to `X11Color.WHITE`.
        :param level_2_font_size:   Font size for `level_2_items`. Defaults to 14.
        :param picture_size:        Width and height for each picture in pixels. Defaults to (128, 128).

        :return: A layout element object representing the vertically aligned list with hierarchical text and image elements.
        """
        ...
    


