"""
This type stub file was generated by pyright.
"""

import typing
from borb.pdf.color.color import Color
from borb.pdf.layout_element.layout_element import LayoutElement

"""
A class representing a horizontal list layout where each item contains an image and optional text, arranged in a horizontal row.

The `HorizontalPictureList` class is designed to create a horizontally aligned list of items, with each item
displaying a picture and accompanying text. This layout is useful for document generation, presentations, or
visual media where horizontally structured image-text pairs are required, such as in product showcases, galleries,
or team member profiles.

This layout provides a visually cohesive format for presenting collections of items in a left-to-right arrangement,
ideal for content that benefits from a compact horizontal design.
"""
class HorizontalPictureList:
    """
    A class representing a horizontal list layout where each item contains an image and optional text, arranged in a horizontal row.

    The `HorizontalPictureList` class is designed to create a horizontally aligned list of items, with each item
    displaying a picture and accompanying text. This layout is useful for document generation, presentations, or
    visual media where horizontally structured image-text pairs are required, such as in product showcases, galleries,
    or team member profiles.

    This layout provides a visually cohesive format for presenting collections of items in a left-to-right arrangement,
    ideal for content that benefits from a compact horizontal design.
    """
    @staticmethod
    def build(level_1_items: typing.List[str], level_2_items: typing.List[typing.List[str]], pictures: typing.List[str], background_color: Color = ..., level_1_font_color: Color = ..., level_1_font_size: int = ..., level_2_font_color: Color = ..., level_2_font_size: int = ..., picture_size: typing.Tuple[int, int] = ...) -> LayoutElement:
        """
        Construct a horizontal list layout element containing paired items with hierarchical text levels and images.

        This method arranges `level_1_items` in a horizontal row, where each main item is paired with a list of sub-items
        (`level_2_items`) and an associated image. Each item can be customized with specific colors, font sizes,
        and image dimensions to create a visually cohesive horizontal list.

        :param level_1_items: Primary text items to be displayed at the top level in the horizontal list.
        :param level_2_items: A list of lists, where each sublist contains secondary text items related to each corresponding item in `level_1_items`. Each sublist aligns with the structure of `level_1_items`.
        :param pictures: Paths to images that accompany each primary item. The length should match `level_1_items` for consistent pairing.
        :param background_color: Background color of the layout. Defaults to `X11Color.PRUSSIAN_BLUE`.
        :param level_1_font_color: Font color for `level_1_items`. Defaults to `X11Color.WHITE`.
        :param level_1_font_size: Font size for `level_1_items`. Defaults to 16.
        :param level_2_font_color: Font color for `level_2_items`. Defaults to `X11Color.WHITE`.
        :param level_2_font_size: Font size for `level_2_items`. Defaults to 14.
        :param picture_size: Dimensions of each picture in pixels, as (width, height). Defaults to (128, 128).

        :return: A layout element representing the horizontally aligned list with hierarchical text and image elements.
        """
        ...
    


