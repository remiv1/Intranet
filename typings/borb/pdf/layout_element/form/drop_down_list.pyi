"""
This type stub file was generated by pyright.
"""

import typing
from borb.pdf.color.color import Color
from borb.pdf.layout_element.form.form_field import FormField
from borb.pdf.layout_element.layout_element import LayoutElement
from borb.pdf.page import Page

"""
Represents a dropdown list form element in a PDF document.

The `DropDownList` class is used to create and manage a dropdown list that allows
users to select a single option from a predefined set of choices. This element
is ideal for scenarios where space is limited or where a list of options is
extensive, providing a cleaner interface for user selection.
"""
class DropDownList(FormField):
    """
    Represents a dropdown list form element in a PDF document.

    The `DropDownList` class is used to create and manage a dropdown list that allows
    users to select a single option from a predefined set of choices. This element
    is ideal for scenarios where space is limited or where a list of options is
    extensive, providing a cleaner interface for user selection.
    """
    def __init__(self, options: typing.List[str], background_color: typing.Optional[Color] = ..., border_color: typing.Optional[Color] = ..., border_dash_pattern: typing.List[int] = ..., border_dash_phase: int = ..., border_width_bottom: int = ..., border_width_left: int = ..., border_width_right: int = ..., border_width_top: int = ..., default_value: str = ..., field_name: typing.Optional[str] = ..., font_color: Color = ..., font_size: int = ..., horizontal_alignment: LayoutElement.HorizontalAlignment = ..., margin_bottom: int = ..., margin_left: int = ..., margin_right: int = ..., margin_top: int = ..., padding_bottom: int = ..., padding_left: int = ..., padding_right: int = ..., padding_top: int = ..., value: str = ..., vertical_alignment: LayoutElement.VerticalAlignment = ...) -> None:
        """
        Initialize a DropDownList object, representing a dropdown list form element in a PDF.

        :param options:                 A list of string options for the dropdown.
        :param background_color:        The background color of the dropdown. Defaults to None.
        :param border_color:            The color of the dropdown's border. Defaults to None.
        :param border_dash_pattern:     A list specifying the dash pattern for the border. Defaults to an empty list (solid border).
        :param border_dash_phase:       The phase offset for the border dash pattern. Defaults to 0.
        :param border_width_bottom:     The width of the bottom border of the dropdown. Defaults to 0.
        :param border_width_left:       The width of the left border of the dropdown. Defaults to 0.
        :param border_width_right:      The width of the right border of the dropdown. Defaults to 0.
        :param border_width_top:        The width of the top border of the dropdown. Defaults to 0.
        :param default_value:           The default selected value for the dropdown. Defaults to an empty string.
        :param field_name:              The optional name of the dropdown form field. Defaults to None.
        :param font_color:              The color of the text in the dropdown. Defaults to X11Color.BLACK.
        :param font_size:               The font size of the text in the dropdown. Defaults to 12.
        :param horizontal_alignment:    The horizontal alignment of the dropdown (e.g., left, center, right). Defaults to LEFT.
        :param margin_bottom:           The bottom margin of the dropdown. Defaults to 0.
        :param margin_left:             The left margin of the dropdown. Defaults to 0.
        :param margin_right:            The right margin of the dropdown. Defaults to 0.
        :param margin_top:              The top margin of the dropdown. Defaults to 0.
        :param padding_bottom:          The bottom padding inside the dropdown. Defaults to 0.
        :param padding_left:            The left padding inside the dropdown. Defaults to 0.
        :param padding_right:           The right padding inside the dropdown. Defaults to 0.
        :param padding_top:             The top padding inside the dropdown. Defaults to 0.
        :param value:                   The current value of the dropdown. Defaults to an empty string.
        :param vertical_alignment:      The vertical alignment of the dropdown (e.g., top, middle, bottom). Defaults to TOP.
        """
        ...
    
    def get_size(self, available_space: typing.Tuple[int, int]) -> typing.Tuple[int, int]:
        """
        Calculate and return the size of the layout element based on available space.

        This function uses the available space to compute the size (width, height)
        of the layout element in points.

        :param available_space: Tuple representing the available space (width, height).
        :return:                Tuple containing the size (width, height) in points.
        """
        ...
    
    def paint(self, available_space: typing.Tuple[int, int, int, int], page: Page) -> None:
        """
        Render the layout element onto the provided page using the available space.

        This function renders the layout element within the given available space on the specified page.

        :param available_space: A tuple representing the available space (left, top, right, bottom).
        :param page:            The Page object on which to render the LayoutElement.
        :return:                None.
        """
        ...
    


