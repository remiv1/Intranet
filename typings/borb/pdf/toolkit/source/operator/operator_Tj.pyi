"""
This type stub file was generated by pyright.
"""

import typing
from borb.pdf.page import Page
from borb.pdf.primitives import PDFType
from borb.pdf.toolkit.source.operator.operator import Operator
from borb.pdf.toolkit.source.operator.source import Source

"""
The 'Tj' operator: Show a text string.

This operator displays a text string at the current position in the user space,
using the font and size specified in the current text state. The string is shown
in the current text rendering mode and color.

The operand for this operator is a string, which represents the text to be displayed.
The operator updates the current position after the string is shown based on the
current text rendering mode and the text matrix.

Note:
    - The text is shown exactly as specified, including spaces and special characters.
    - After the text is shown, the current position is updated according to the current
      text matrix and text rendering mode.
    - This operator does not automatically add any additional spacing between characters
      beyond what is defined by the current text state.
"""
class OperatorTj(Operator):
    """
    The 'Tj' operator: Show a text string.

    This operator displays a text string at the current position in the user space,
    using the font and size specified in the current text state. The string is shown
    in the current text rendering mode and color.

    The operand for this operator is a string, which represents the text to be displayed.
    The operator updates the current position after the string is shown based on the
    current text rendering mode and the text matrix.

    Note:
        - The text is shown exactly as specified, including spaces and special characters.
        - After the text is shown, the current position is updated according to the current
          text matrix and text rendering mode.
        - This operator does not automatically add any additional spacing between characters
          beyond what is defined by the current text state.
    """
    def apply(self, operands: typing.List[PDFType], page: Page, source: Source) -> None:
        """
        Apply the operator's logic to the given `Page`.

        This method executes the operator using the provided operands, applying its
        effects to the specified `Page` via the `Source` processor. Subclasses should
        override this method to implement specific operator behavior.

        :param page: The `Page` object to which the operator is applied.
        :param source: The `Source` object managing the content stream.
        :param operands: A list of `PDFType` objects representing the operator's operands.
        """
        ...
    
    def get_name(self) -> str:
        """
        Retrieve the name of the operator.

        The name is a string identifier that corresponds to the operator
        in a PDF content stream (e.g., "BT" for Begin Text or "q" for Save Graphics State).

        :return: The name of the operator as a string.
        """
        ...
    
    def get_number_of_operands(self) -> int:
        """
        Retrieve the expected number of operands for this operator.

        The number of operands varies depending on the operator's purpose. For example,
        some operators might require no operands, while others may require multiple.

        :return: The number of operands expected by this operator as an integer.
        """
        ...
    


