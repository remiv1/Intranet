"""
This type stub file was generated by pyright.
"""

import typing
from borb.pdf.toolkit.event import Event
from borb.pdf.toolkit.pipe import Pipe

"""
A filter class for processing PDF page content streams, specifically targeting text content rendered in a specified font size.

This filter identifies and processes text elements based on their font size, allowing selective
extraction or manipulation of text segments that match a given size. `ByFontSize` is useful for
handling content where text size denotes hierarchy or emphasis, such as headings, subheadings, or
body text in structured documents.
"""
class ByFontSize(Pipe):
    """
    A filter class for processing PDF page content streams, specifically targeting text content rendered in a specified font size.

    This filter identifies and processes text elements based on their font size, allowing selective
    extraction or manipulation of text segments that match a given size. `ByFontSize` is useful for
    handling content where text size denotes hierarchy or emphasis, such as headings, subheadings, or
    body text in structured documents.
    """
    def __init__(self, max_font_size: typing.Optional[int] = ..., min_font_size: typing.Optional[int] = ...) -> None:
        """
        Initialize a new instance of the `ByFontSize` filter.

        :param max_font_size: The maximum font size to filter for. Defaults to the largest possible integer if not specified.
        :param min_font_size: The minimum font size to filter for. Defaults to 0 if not specified.
        """
        ...
    
    def process(self, event: Event) -> None:
        """
        Process the given event.

        This base implementation is a no-op. Subclasses should override this method
        to provide specific processing logic.

        :param event: The event object to process.
        """
        ...
    


