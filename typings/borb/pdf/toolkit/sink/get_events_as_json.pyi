"""
This type stub file was generated by pyright.
"""

import pathlib
import typing
from borb.pdf.toolkit.event import Event
from borb.pdf.toolkit.pipe import Pipe

"""
A Pipe implementation that processes PDF events and outputs them in a structured JSON format.

This class is designed to collect events from a PDF document, such as shape fill, shape stroke, and text events,
and serialize these events into a JSON format. The events are organized by the page number of the PDF document
and saved to a specified file location.
"""
class GetEventsAsJSON(Pipe):
    """
    A Pipe implementation that processes PDF events and outputs them in a structured JSON format.

    This class is designed to collect events from a PDF document, such as shape fill, shape stroke, and text events,
    and serialize these events into a JSON format. The events are organized by the page number of the PDF document
    and saved to a specified file location.
    """
    def __init__(self, where_to: typing.Union[str, pathlib.Path]) -> None:
        """
        Initialize the GetEventsAsJSON pipe.

        This constructor sets up the necessary structures to collect and organize events
        from a PDF document, such as shape fill, shape stroke, and text events, into
        a dictionary, organized by page number. The collected events will later be serialized
        into a JSON file at the specified location.
        """
        ...
    
    def process(self, event: Event) -> None:
        """
        Process the given event.

        This base implementation is a no-op. Subclasses should override this method
        to provide specific processing logic.

        :param event: The event object to process.
        """
        ...
    


