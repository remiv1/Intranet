"""
This type stub file was generated by pyright.
"""

import typing
from borb.pdf.visitor.write_new.write_new_visitor import WriteNewVisitor

"""
A visitor class for handling the writing or persistence of document-level structures within the PDF.

This class is responsible for traversing and processing the top-level components of a PDF
document, such as metadata, pages, and overall structure. It ensures that all essential
elements of the document are correctly written and formatted in accordance with PDF standards.
"""
ReferencedObjectType = ...
class DocumentVisitor(WriteNewVisitor):
    """
    A visitor class for handling the writing or persistence of document-level structures within the PDF.

    This class is responsible for traversing and processing the top-level components of a PDF
    document, such as metadata, pages, and overall structure. It ensures that all essential
    elements of the document are correctly written and formatted in accordance with PDF standards.
    """
    def visit(self, node: typing.Any) -> bool:
        """
        Traverse the PDF document tree using the visitor pattern.

        This method is called when a node does not have a specialized handler.
        Subclasses can override this method to provide default behavior or logging
        for unsupported nodes. If any operation is performed on the node (e.g.,
        writing or persisting), the method returns `True`. Otherwise, it returns
        `False` to indicate that the visitor did not process the node.

        :param node:    the node (PDFType) to be processed
        :return:        True if the visitor processed the node False otherwise
        """
        ...
    


