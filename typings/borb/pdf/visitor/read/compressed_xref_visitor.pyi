"""
This type stub file was generated by pyright.
"""

import typing
from borb.pdf.visitor.read.xref_visitor import XRefVisitor

"""
Visitor class for processing compressed cross-reference (XRef) tables in a PDF.

The `CompressedXRefVisitor` class extends `ReadVisitor` and is responsible for
reading and interpreting compressed XRef tables in PDF files. Compressed XRefs
store references to PDF objects in a more compact form than traditional
uncompressed XRef tables, and are commonly used in newer PDF versions to reduce
file size.

This visitor identifies and processes the compressed XRef structure, extracting
and mapping object locations for later retrieval during document parsing. It
traverses the PDF structure to locate and interpret object information, aiding
in building the PDF object tree for decoding and rendering purposes.
"""
class CompressedXRefVisitor(XRefVisitor):
    """
    Visitor class for processing compressed cross-reference (XRef) tables in a PDF.

    The `CompressedXRefVisitor` class extends `ReadVisitor` and is responsible for
    reading and interpreting compressed XRef tables in PDF files. Compressed XRefs
    store references to PDF objects in a more compact form than traditional
    uncompressed XRef tables, and are commonly used in newer PDF versions to reduce
    file size.

    This visitor identifies and processes the compressed XRef structure, extracting
    and mapping object locations for later retrieval during document parsing. It
    traverses the PDF structure to locate and interpret object information, aiding
    in building the PDF object tree for decoding and rendering purposes.
    """
    __DICT_OPEN_BRACKETS = ...
    def visit(self, node: typing.Any) -> typing.Optional[typing.Any]:
        """
        Traverse the PDF document tree using the visitor pattern.

        This method is called when a node does not have a specialized handler.
        Subclasses can override this method to provide default behavior or logging
        for unsupported nodes. If any operation is performed on the node (e.g.,
        writing or persisting), the method returns `True`. Otherwise, it returns
        `False` to indicate that the visitor did not process the node.

        :param node:    the node (PDFType) to be processed
        :return:        True if the visitor processed the node False otherwise
        """
        ...
    


