"""
This type stub file was generated by pyright.
"""

from borb.pdf.primitives import stream

"""
PDF Stream Decoder Module.

This module provides functionality for decoding compressed PDF `stream` objects,
applying the appropriate decompression filters specified in each stream's `Filter` entry.

PDF streams may use various encoding methods to reduce file size, including but not
limited to:
- **FlateDecode** (zlib or DEFLATE-based compression)
- **ASCII85Decode** (ASCII base-85 encoding)
- **LZWDecode** (LZW compression, used in image data and other highly repetitive content)
- **RunLengthDecode** (Run-length encoding, suitable for monochrome images or data with long runs of single-byte values)

The `decode_stream` function in this module detects and applies these filters, allowing
compressed data within the PDF to be decoded for processing, rendering, or other uses.
If multiple filters are applied to a stream, `decode_stream` processes them sequentially
in the order they are listed.
"""
def decode_stream(stream_to_decode: stream) -> stream:
    """
    Decode a PDF `stream` object, applying compression filters specified in the stream's `Filter` entry.

    This function takes a PDF `stream` object that may be encoded with various
    compression algorithms (such as Flate, ASCII85, LZW, or Run-Length encoding),
    decodes the `Bytes` content within the stream, and stores the resulting uncompressed
    content under the `DecodedBytes` entry in the stream dictionary.

    If the stream is already decoded (has a `DecodedBytes` entry), the function returns
    immediately without further processing.

    :param s:   The input `stream` object, containing raw (potentially compressed)
                byte data in its `Bytes` entry and metadata in `Filter` and
                `DecodeParms` entries for specifying the encoding filters
                and parameters.
    :return:    The input `stream`, modified to include decoded data in the `DecodedBytes`
                entry, ready for uncompressed access.
    """
    ...

