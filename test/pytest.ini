[tool:pytest]
# Configuration des tests
testpaths = test
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Marqueurs de tests
markers =
    unit: Tests unitaires
    integration: Tests d'intégration
    slow: Tests lents (qui prennent plus de temps)
    auth: Tests d'authentification
    database: Tests impliquant la base de données (mockée)
    routes: Tests des routes Flask
    models: Tests des modèles de données

# Options par défaut
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes

# Répertoires à ignorer
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    __pycache__
    .pytest_cache

# Configuration de la couverture de code
[coverage:run]
source = ../app
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:

show_missing = True
precision = 2

[coverage:html]
directory = htmlcov

[flake8]
max-line-length = 120
exclude = 
    .git,
    __pycache__,
    .pytest_cache,
    migrations,
    venv,
    env
ignore = 
    E203,  # Whitespace before ':'
    W503   # Line break before binary operator