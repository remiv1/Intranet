services:
  web:
    build:
      context: .
      dockerfile: app/Dockerfile.app
    container_name: intranet_app
    depends_on:
      - db
    volumes:
      - documents_data:${FILES_DOCKER_PATH}  #  Persistance des fichiers de contrats
      - print_data:${PRINT_DOCKER_PATH} #  Persistance des fichiers de documents envoyés à l'impression
      - signature_data:${SIGNATURE_DOCKER_PATH} # Persistance des fichiers de signatures
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      - DB_URL=${DB_URL}
    env_file:
      - .env
    ports:
      - 5000
    restart: always
    ports:
      - "5000:5000"  #  Port de l'application Flask
    entrypoint: ["sh", "app/entrypoint.sh"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      intranet_net:
      cups_network:
        ipv4_address: 192.168.100.10

  nginx:
    image: nginx:latest
    container_name: intranet_proxy
    depends_on:
      - web
    volumes:
      - ./app/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /opt/certs:/etc/nginx/certs
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    ports:
      - "443:443"  #  Port HTTPS
      - "80:80"
    networks:
      - intranet_net
    restart: always

  db:
    build:
      context: ./database
      dockerfile: Dockerfile.mariadb
    image: intranet_mariadb:12.0.2
    container_name: intranet_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    env_file:
      - .env
    volumes:
      - dbdata:${DB_DOCKER_PATH}
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - intranet_net

volumes:
  dbdata:
    driver: local
    driver_opts:
      type: none
      device: ${DB_LOCAL_PATH}
      o: bind
  signature_data:
    driver: local
    driver_opts:
      type: none
      device: ${SIGNATURE_LOCAL_PATH}
      o: bind
  documents_data:
    driver: local
    driver_opts:
      type: none
      device: ${FILES_LOCAL_PATH}
      o: bind
  print_data:
    driver: local
    driver_opts:
      type: none
      device: ${PRINT_LOCAL_PATH}
      o: bind

networks:
  intranet_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
  cups_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24
